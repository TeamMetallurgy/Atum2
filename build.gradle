plugins {
    id 'java-library'
	id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.97'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
  maven {
    name = "JEI"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven { 
    name = "CraftTweaker2"
    url = "https://maven.blamejared.com" 
  }
  maven {
    name = "TheOneProbe"
    url "https://cursemaven.com"
    content {
        includeGroup "curse.maven"
    }
  }
  maven {
    name = "Curios"
    url = "https://maven.theillusivec4.top/"
  }
  flatDir { dirs 'deps' }
}

version = "${minecraft_version}-${mod_version}" + getBuildNumber()
group= "com.teammetallurgy.atum"

base {
    archivesName = "Atum"
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"
    compileOnly "com.blamejared.crafttweaker:CraftTweaker-neoforge-${minecraft_version}:${ct_version}"
    runtimeOnly "curse.maven:theoneprobe-245211:4442439"
    compileOnly "curse.maven:theoneprobe-245211:4442439"
    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}"
    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}:api"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_version: mod_version, pack_format_number: pack_format_number
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'com/teammetallurgy/atum/api/**/*'
    archiveClassifier = 'api'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId "atum2_${minecraft_version}"
            artifact jar
            artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

artifacts {
    archives apiJar
}

String getBuildNumber() {
    return System.getenv('BUILD_NUMBER') ? ".jenkins" + System.getenv('BUILD_NUMBER') : "";
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

//processResources { TODO Readd sometime before release
//    // Minifies all .json files when building the mod.
//    // Source files are not minified, only the jar copies.
//	doLast {
//	    def jsonMinifyStart = System.currentTimeMillis()
//	    def jsonMinified = 0
//		def jsonBytesSaved = 0
//		
//	    fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
//			File file = it
//			jsonMinified++
//			def oldLength = file.length()
//			file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
//			jsonBytesSaved += oldLength - file.length()
//		}
//		println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
//	}
//}